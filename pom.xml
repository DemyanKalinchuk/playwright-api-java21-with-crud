<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>playwright-api-java21</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Playwright API (Java 21)</name>
  <description>Java 21 + Maven + API testing with TestNG, RestAssured, Allure</description>

  <properties>
    <maven.compiler.release>21</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- libs -->
    <testng.version>7.10.2</testng.version>
    <assertj.version>3.26.3</assertj.version>
    <jackson.version>2.17.1</jackson.version>
    <slf4j.version>2.0.13</slf4j.version>
    <log4j2.version>2.22.1</log4j2.version>
    <allure.testng.version>2.24.0</allure.testng.version>
    <aspectj.version>1.9.22.1</aspectj.version>
    <restassured.version>5.5.0</restassured.version>
    <playwright.version>1.47.0</playwright.version> <!-- keep if you still need Playwright APIs -->

    <!-- build plugins -->
    <surefire.version>3.5.2</surefire.version>
    <dependency.plugin.version>3.6.1</dependency.plugin.version>
    <allure.maven.plugin.version>2.12.0</allure.maven.plugin.version>
  </properties>

  <dependencies>
    <!-- Rest Assured (used in main utils.request.HttpRequest) -->
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${restassured.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- Jackson for JSON -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- TestNG -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- AssertJ (tests) -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Allure TestNG adapter -->
    <dependency>
      <groupId>io.qameta.allure</groupId>
      <artifactId>allure-testng</artifactId>
      <version>${allure.testng.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- AspectJ weaver for Allure step interception (test scope) -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectj.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Logging: log4j2 + slf4j bridge -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
      <version>${log4j2.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.38</version>
      <scope>provided</scope>
    </dependency>

    <!-- Owner (if you actually use it; else remove) -->
    <dependency>
      <groupId>org.aeonbits.owner</groupId>
      <artifactId>owner</artifactId>
      <version>1.0.12</version>
      <scope>compile</scope>
    </dependency>

    <!-- Playwright (only if still needed; otherwise remove both Playwright deps entirely) -->
    <dependency>
      <groupId>com.microsoft.playwright</groupId>
      <artifactId>playwright</artifactId>
      <version>${playwright.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- JSON Schema Validator (tests) -->
    <dependency>
      <groupId>com.networknt</groupId>
      <artifactId>json-schema-validator</artifactId>
      <version>1.4.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${dependency.plugin.version}</version>
        <executions>
          <execution>
            <id>copy-aspectj</id>
            <phase>validate</phase>
            <goals><goal>copy</goal></goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.aspectj</groupId>
                  <artifactId>aspectjweaver</artifactId>
                  <version>${aspectj.version}</version>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>aspectjweaver.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Surefire runs TestNG tests; pass the agent from target/ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <useSystemClassLoader>true</useSystemClassLoader>
          <argLine>@{argLine} -javaagent:${project.build.directory}/aspectjweaver.jar</argLine>
          <!-- run your smoke classes by default; or comment this and use -Dtest=... in CI -->
          <!--
          <includes>
            <include>**/smokeTests/ApiSmokeTests.java</include>
            <include>**/smokeTests/AuthRegisterTests.java</include>
            <include>**/smokeTests/AuthSmokeTests.java</include>
          </includes>
          -->
        </configuration>
      </plugin>

      <!-- Allure Maven plugin (optional: for report generation goals) -->
      <plugin>
        <groupId>io.qameta.allure</groupId>
        <artifactId>allure-maven</artifactId>
        <version>${allure.maven.plugin.version}</version>
        <configuration>
          <reportVersion>2.25.0</reportVersion>
          <resultsDirectory>${project.build.directory}/allure-results</resultsDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!-- Profiles WITHOUT overriding the -javaagent path -->
  <profiles>
    <profile>
      <id>test-env</id>
      <activation><activeByDefault>true</activeByDefault></activation>
      <properties>
        <staging>test</staging>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <!-- keep suite if you really use it; else remove -->
              <!-- <suiteXmlFiles><suiteXmlFile>TestStagePropertiesTestNG.xml</suiteXmlFile></suiteXmlFiles> -->
              <systemPropertyVariables>
                <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>prod-env</id>
      <properties>
        <staging>prod</staging>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <!-- <suiteXmlFiles><suiteXmlFile>ProdStagePropertiesTestNG.xml</suiteXmlFile></suiteXmlFiles> -->
              <systemPropertyVariables>
                <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>