<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="2" total="16" passed="10" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-10T00:44:52 EEST" name="Playwright API Test Suite" finished-at="2025-08-10T00:45:04 EEST" duration-ms="12120">
    <groups>
    </groups>
    <test started-at="2025-08-10T00:44:52 EEST" name="API Smoke + CRUD Tests" finished-at="2025-08-10T00:45:04 EEST" duration-ms="12120">
      <class name="smokeTests.ApiSmokeTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:44:52 EEST" name="beforeClass" finished-at="2025-08-10T00:44:55 EEST" duration-ms="3308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:44:55 EEST" name="setUpApi" finished-at="2025-08-10T00:44:55 EEST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="createUser_shouldReturn201_andEchoBody()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:44:55 EEST" name="createUser_shouldReturn201_andEchoBody" finished-at="2025-08-10T00:45:01 EEST" duration-ms="5514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser_shouldReturn201_andEchoBody -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:45:01 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:01 EEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:45:01 EEST" name="setUpApi" finished-at="2025-08-10T00:45:01 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method retried="true" signature="getUsers_shouldReturn200_andList()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:45:01 EEST" name="getUsers_shouldReturn200_andList" finished-at="2025-08-10T00:45:01 EEST" duration-ms="196" status="SKIP">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[
Expecting value to be true but was false]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: 
Expecting value to be true but was false
at smokeTests.ApiSmokeTest.getUsers_shouldReturn200_andList(ApiSmokeTest.java:19)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUsers_shouldReturn200_andList -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:45:01 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:01 EEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:45:01 EEST" name="setUpApi" finished-at="2025-08-10T00:45:01 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="getUsers_shouldReturn200_andList()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:45:01 EEST" name="getUsers_shouldReturn200_andList" finished-at="2025-08-10T00:45:01 EEST" duration-ms="77" status="FAIL">
          <exception class="org.opentest4j.AssertionFailedError">
            <message>
              <![CDATA[
Expecting value to be true but was false]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.opentest4j.AssertionFailedError: 
Expecting value to be true but was false
at smokeTests.ApiSmokeTest.getUsers_shouldReturn200_andList(ApiSmokeTest.java:19)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.opentest4j.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUsers_shouldReturn200_andList -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:45:01 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:01 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:smokeTests.ApiSmokeTest@4b741d6d]" started-at="2025-08-10T00:45:01 EEST" name="afterClass" finished-at="2025-08-10T00:45:01 EEST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- smokeTests.ApiSmokeTest -->
      <class name="smokeTests.ReqResCrudTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:03 EEST" name="beforeClass" finished-at="2025-08-10T00:45:03 EEST" duration-ms="366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:03 EEST" name="setUpApi" finished-at="2025-08-10T00:45:03 EEST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="createUserTest()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:03 EEST" name="createUserTest" finished-at="2025-08-10T00:45:04 EEST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="setUpApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method retried="true" signature="deleteUserTest()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="deleteUserTest" finished-at="2025-08-10T00:45:04 EEST" duration-ms="72" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting actual:
  401
to be in:
  [204, 200]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting actual:
  401
to be in:
  [204, 200]

at smokeTests.ReqResCrudTest.deleteUserTest(ReqResCrudTest.java:52)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="setUpApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="deleteUserTest()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="deleteUserTest" finished-at="2025-08-10T00:45:04 EEST" duration-ms="72" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expecting actual:
  401
to be in:
  [204, 200]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expecting actual:
  401
to be in:
  [204, 200]

at smokeTests.ReqResCrudTest.deleteUserTest(ReqResCrudTest.java:52)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUserTest -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="setUpApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="partialUpdateUserTest()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="partialUpdateUserTest" finished-at="2025-08-10T00:45:04 EEST" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partialUpdateUserTest -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="setUpApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="readUserTest()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="readUserTest" finished-at="2025-08-10T00:45:04 EEST" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readUserTest -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="setUpApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="updateUserTest()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="updateUserTest" finished-at="2025-08-10T00:45:04 EEST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTest -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:04 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:smokeTests.ReqResCrudTest@173ed316]" started-at="2025-08-10T00:45:04 EEST" name="afterClass" finished-at="2025-08-10T00:45:04 EEST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- smokeTests.ReqResCrudTest -->
      <class name="smokeTests.JsonPlaceholderCrudTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:01 EEST" name="beforeClass" finished-at="2025-08-10T00:45:01 EEST" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:01 EEST" name="setUpApi" finished-at="2025-08-10T00:45:01 EEST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="createPost_POST_201()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:01 EEST" name="createPost_POST_201" finished-at="2025-08-10T00:45:02 EEST" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPost_POST_201 -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:02 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="setUpApi" finished-at="2025-08-10T00:45:02 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="deletePost_DELETE_200()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="deletePost_DELETE_200" finished-at="2025-08-10T00:45:02 EEST" duration-ms="380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePost_DELETE_200 -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:02 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="setUpApi" finished-at="2025-08-10T00:45:02 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="partialUpdatePost_PATCH_200()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="partialUpdatePost_PATCH_200" finished-at="2025-08-10T00:45:02 EEST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partialUpdatePost_PATCH_200 -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:02 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="setUpApi" finished-at="2025-08-10T00:45:02 EEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="readPost_GET_200()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="readPost_GET_200" finished-at="2025-08-10T00:45:02 EEST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readPost_GET_200 -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:02 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="setUpApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="setUpApi" finished-at="2025-08-10T00:45:02 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApi -->
        <test-method signature="updatePost_PUT_200()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:02 EEST" name="updatePost_PUT_200" finished-at="2025-08-10T00:45:03 EEST" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePost_PUT_200 -->
        <test-method is-config="true" signature="tearDownApi()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:03 EEST" name="tearDownApi" finished-at="2025-08-10T00:45:03 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownApi -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:smokeTests.JsonPlaceholderCrudTest@69e153c5]" started-at="2025-08-10T00:45:03 EEST" name="afterClass" finished-at="2025-08-10T00:45:03 EEST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- smokeTests.JsonPlaceholderCrudTest -->
    </test> <!-- API Smoke + CRUD Tests -->
  </suite> <!-- Playwright API Test Suite -->
</testng-results>
